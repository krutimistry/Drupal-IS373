<?php
function dbtng_module_practice_entry_insert($entry) {
    $return_value = NULL;
    try {
        $return_value = db_insert('dbtng_example')
            ->fields($entry)
            ->execute();
    }
    catch (Exception $e) {
        drupal_set_message(t('db_insert failed. Message = %message, query= %query',
            array('%message' => $e->getMessage(), '%query' => $e->query_string)), 'error');
    }
    return $return_value;
}

function dbtng_module_practice_entry_update($entry) {
    try {
        // db_update()...->execute() returns the number of rows updated.
        $count = db_update('dbtng_example')
            ->fields($entry)
            ->condition('pid', $entry['pid'])
            ->execute();
    }
    catch (Exception $e) {
        drupal_set_message(t('db_update failed. Message = %message, query= %query',
            array('%message' => $e->getMessage(), '%query' => $e->query_string)), 'error');
    }
    return $count;
}

function dbtng_module_practice_entry_delete($entry) {
    db_delete('dbtng_example')
        ->condition('pid', $entry['pid'])
        ->execute();

}
function dbtng_module_practice_entry_load($entry = array()) {
    // Read all fields from the dbtng_example table.
    $select = db_select('dbtng_example', 'example');
    $select->fields('example');

    // Add each field and value as a condition to this query.
    foreach ($entry as $field => $value) {
        $select->condition($field, $value);
    }
    // Return the result in object format.
    return $select->execute()->fetchAll();
}

function dbtng_module_practice_advanced_list() {
    $output = '';

    $select = db_select('dbtng_example', 'e');

    $select->join('users', 'u', 'e.uid = u.uid');

    $select->addField('e', 'pid');
    $select->addField('u', 'name', 'username');
    $select->addField('e', 'name');
    $select->addField('e', 'surname');
    $select->addField('e', 'age');
    $select->condition('e.name', 'John');
    $select->condition('e.age', 18, '>');
    $select->range(0, 50);
    $entries = $select->execute()->fetchAll(PDO::FETCH_ASSOC);
    if (!empty($entries)) {
        $rows = array();
        foreach ($entries as $entry) {
            $rows[] = array_map('check_plain', $entry);
        }
        $header = array(t('Id'), t('Created by'), t('Name'), t('Surname'), t('Age'));
        $output .= theme('table', array('header' => $header, 'rows' => $rows));
    }
    else {
        drupal_set_message(t('No entries meet the filter criteria (Name = "John" and Age > 18).'));
    }
    return $output;
}
function dbtng_module_practice_help($path) {
    $output = '';
    switch ($path) {
        case 'examples/dbtng':
            $output = t('Generate a list of all entries in the database. There is no filter in the query.');
            break;

        case 'examples/dbtng/advanced':
            $output  = t('A more complex list of entries in the database.') . ' ';
            $output .= t('Only the entries with name = "John" and age older than 18 years are shown, the username of the person who created the entry is also shown.');
            break;

        case 'examples/dbtng/update':
            $output = t('Demonstrates a database update operation.');
            break;

        case 'examples/dbtng/add':
            $output = t('Add an entry to the dbtng_example table.');
            break;
    }
    return $output;
}
function dbtng_module_practice_menu(){
    $items = array();

    $items['examples/dbtng'] = array(
        'title' => 'DBTNG Example',
        'page callback' => 'dbtng_example_list',
        'access callback' => TRUE,
    );
    $items['examples/dbtng/list'] = array(
        'title' => 'List',
        'type' => MENU_DEFAULT_LOCAL_TASK,
        'weight' => -10,
    );
    $items['examples/dbtng/add'] = array(
        'title' => 'Add entry',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('dbtng_example_form_add'),
        'access callback' => TRUE,
        'type' => MENU_LOCAL_TASK,
        'weight' => -9,
    );
    $items['examples/dbtng/update'] = array(
        'title' => 'Update entry',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('dbtng_example_form_update'),
        'type' => MENU_LOCAL_TASK,
        'access callback' => TRUE,
        'weight' => -5,
    );
    $items['examples/dbtng/advanced'] = array(
        'title' => 'Advanced list',
        'page callback' => 'dbtng_example_advanced_list',
        'access callback' => TRUE,
        'type' => MENU_LOCAL_TASK,
    );

    return $items;
}
function dbtng_module_practice_form_add($form, &$form_state) {
    $form = array();

    $form['add'] = array(
        '#type'  => 'fieldset',
        '#title' => t('Add a person entry'),
    );
    $form['add']['name'] = array(
        '#type'  => 'textfield',
        '#title' => t('Name'),
        '#size'  => 15,
    );
    $form['add']['surname'] = array(
        '#type'  => 'textfield',
        '#title' => t('Surname'),
        '#size'  => 15,
    );
    $form['add']['age'] = array(
        '#type'  => 'textfield',
        '#title' => t('Age'),
        '#size'  => 5,
        '#description' => t("Values greater than 127 will cause an exception. Try it - it's a great example why exception handling is needed with DTBNG."),
    );
    $form['add']['submit'] = array(
        '#type'  => 'submit',
        '#value' => t('Add'),
    );

    return $form;
}
function dbtng_module_practice_form_add_submit($form, &$form_state) {
    global $user;

    // Save the submitted entry.
    $entry = array(
        'name'    => $form_state['values']['name'],
        'surname' => $form_state['values']['surname'],
        'age'     => $form_state['values']['age'],
        'uid'     => $user->uid,
    );
    $return = dbtng_module_practice_entry_insert($entry);
    if ($return) {
        drupal_set_message(t("Created entry @entry", array('@entry' => print_r($entry, TRUE))));
    }
}

function dbtng_module_practice_form_update($form, &$form_state) {
    $form = array(
        '#prefix' => '<div id="updateform">',
        '#suffix' => '</div>',
    );

    $entries = dbtng_module_practice_entry_load();
    $keyed_entries = array();
    if (empty($entries)) {
        $form['no_values'] = array(
            '#value' => t("No entries exist in the table dbtng_example table."),
        );
        return $form;
    }

    foreach ($entries as $entry) {
        $options[$entry->pid] = t("@pid: @name @surname (@age)",
            array(
                '@pid' => $entry->pid,
                '@name' => $entry->name,
                '@surname' => $entry->surname,
                '@age' => $entry->age,
            )
        );
        $keyed_entries[$entry->pid] = $entry;
    }
    $default_entry = !empty($form_state['values']['pid']) ? $keyed_entries[$form_state['values']['pid']] : $entries[0];

    $form_state['entries'] = $keyed_entries;

    $form['pid'] = array(
        '#type' => 'select',
        '#options' => $options,
        '#title' => t('Choose entry to update'),
        '#default_value' => $default_entry->pid,
        '#ajax' => array(
            'wrapper' => 'updateform',
            'callback' => 'dbtng_example_form_update_callback',
        ),
    );

    $form['name'] = array(
        '#type' => 'textfield',
        '#title' => t('Updated first name'),
        '#size' => 15,
        '#default_value' => $default_entry->name,
    );

    $form['surname'] = array(
        '#type' => 'textfield',
        '#title' => t('Updated last name'),
        '#size' => 15,
        '#default_value' => $default_entry->surname,
    );
    $form['age'] = array(
        '#type' => 'textfield',
        '#title' => t('Updated age'),
        '#size' => 4,
        '#default_value' => $default_entry->age,
        '#description' => t("Values greater than 127 will cause an exception"),
    );

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Update'),
    );
    return $form;
}
function dbtng_example_form_update_callback($form, $form_state) {
    $entry = $form_state['entries'][$form_state['values']['pid']];
    foreach (array('name', 'surname', 'age') as $item) {
        $form[$item]['#value'] = $entry->$item;
    }
    return $form;
}

/**
 * Submit handler for 'update entry' form.
 */
function dbtng_module_practice_form_update_submit($form, &$form_state) {
    global $user;
    
    $entry = array(
        'pid' => $form_state['values']['pid'],
        'name' => $form_state['values']['name'],
        'surname' => $form_state['values']['surname'],
        'age' => $form_state['values']['age'],
        'uid' => $user->uid,
    );
    $count = dbtng_module_practice_entry_update($entry);
    drupal_set_message(t("Updated entry @entry (@count row updated)",
        array('@count' => $count, '@entry' => print_r($entry, TRUE))));
}